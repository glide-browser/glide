name: macOS Release Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to sign"
        required: true
        type: string
  workflow_call:
    inputs:
      artifacts:
        description: "Upload DMG to CI artifacts instead of the release directly"
        required: true
        type: boolean

jobs:
  macos-sign:
    name: Sign
    runs-on: "macos-15"
    timeout-minutes: 40
    environment: release

    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # needed while we have private dependencies
      - name: Configure GitHub auth
        run: |
          TOKEN="${{ secrets.REPO_ACCESS_TOKEN }}"

          git config --global \
            url."https://x-access-token:${TOKEN}@github.com/glide-browser/glider.git".insteadOf \
            "git@github.com:glide-browser/glider.git"

          git config --global \
            url."https://x-access-token:${TOKEN}@github.com/glide-browser/webextension-types.git".insteadOf \
            "git@github.com:glide-browser/webextension-types.git"

          git config --global \
            url."https://github.com/mozilla-firefox/firefox.git".insteadOf \
            "git@github.com:mozilla-firefox/firefox.git"

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Import APPLE DEVELOPER ID CERTIFICATE for .app
        uses: Apple-Actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.MACOS_P12_BASE64 }}
          p12-password: ${{ secrets.MACOS_P12_PASSWORD }}

      - name: Download built DMG
        if: inputs.tag
        run: |
          mkdir -p dist
          ./.github/scripts/github-download-artifact.sh
        env:
          TAG: ${{ inputs.tag }}
          ASSET_NAME: "glide.macos-${{ matrix.arch }}.dmg"
          OUTPUT_FILE: "dist/glide.dmg"
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Download built DMG
        if: inputs.artifacts
        uses: actions/download-artifact@v4
        with:
          name: glide.macos-${{ matrix.arch }}.dmg
          path: dist

      - name: Rename DMG
        if: inputs.artifacts
        run: |
          mv dist/*.dmg dist/glide.dmg

      - name: Install system dependencies
        run: |
          brew update
          brew install cairo@1.18.4 gnu-tar@1.35 mercurial@7.1
          sudo pip install setuptools

          brew uninstall --ignore-dependencies python3.12 -f

          export PATH="$(python3 -m site --user-base)/bin":$PATH
          python3 -m pip install --user mercurial

          rm '/usr/local/bin/2to3-3.11' '/usr/local/bin/2to3-3.12' '/usr/local/bin/2to3'
          rm '/usr/local/bin/idle3.11' '/usr/local/bin/idle3.12' '/usr/local/bin/idle3'
          rm '/usr/local/bin/pydoc3.11' '/usr/local/bin/pydoc3.12' '/usr/local/bin/pydoc3'
          rm '/usr/local/bin/python3.11' '/usr/local/bin/python3.12' '/usr/local/bin/python3'
          rm '/usr/local/bin/python3.11-config' '/usr/local/bin/python3.12-config' '/usr/local/bin/python3-config'

          brew install watchman@2025.09.08.00 cargo-binstall@1.15.4

          cargo binstall apple-codesign

      - name: Force usage of gnu-tar
        run: |
          echo 'export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"' >> ~/.bash_profile
          echo 'export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"' >> ~/.zsh
          source ~/.bash_profile

      - name: Bootstrap repo
        run: |
          pnpm bootstrap

          cd engine
          export GLIDER_PLATFORM="darwin"
          export PATH="$(python3 -m site --user-base)/bin":$PATH
          ./mach --no-interactive bootstrap --application-choice browser --no-system-changes || true
          cd ..

      - name: Sign
        run: |
          ./.github/scripts/macos-sign.sh
        env:
          ARCH: ${{ matrix.arch }}
          APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
          APPLE_ACCOUNT_ID: ${{ secrets.APPLE_ACCOUNT_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_ID_PASSWORD: ${{ secrets.APPLE_APP_ID_PASSWORD }}
          P12_BASE64: ${{ secrets.MACOS_P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          DMG_PATH: ./dist/glide.dmg
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}

      - name: Upload signed DMG to release
        if: inputs.tag
        run: |
          gh release upload $TAG ./engine/glide.macos-${{ matrix.arch }}.dmg#glide.macos-${{ matrix.arch }}-signed.dmg --clobber
        env:
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          TAG: ${{ inputs.tag }}

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: glide.macos-${{ matrix.arch }}.signed.dmg
          path: ./engine/glide.macos-${{ matrix.arch }}.dmg
