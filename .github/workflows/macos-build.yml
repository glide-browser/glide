name: macOS Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to upload the DMG to"
        type: string
      artifacts:
        description: "Upload built artifacts"
        type: boolean
        default: true
  workflow_call:
    inputs:
      artifacts:
        description: "Used to distinguish dispatch and call events"
        required: true
        type: boolean

jobs:
  macos-build:
    name: Build - ${{ matrix.arch }}

    runs-on: depot-macos-14
    env:
      CARGO_TERM_COLOR: always
      GLIDER_PLATFORM: darwin
      GLIDE_RELEASE: true
      GLIDE_DISABLE_PGO: 1
      GLIDER_COMPAT: ${{ matrix.arch }}

    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64]

    steps:
      - name: Debug
        run: |
          xcrun --show-sdk-version

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # needed while we have private dependencies
      - name: Configure GitHub auth
        run: |
          TOKEN="${{ secrets.REPO_ACCESS_TOKEN }}"

          git config --global \
            url."https://x-access-token:${TOKEN}@github.com/glide-browser/glider.git".insteadOf \
            "git@github.com:glide-browser/glider.git"

          git config --global \
            url."https://x-access-token:${TOKEN}@github.com/glide-browser/webextension-types.git".insteadOf \
            "git@github.com:glide-browser/webextension-types.git"

          git config --global \
            url."https://github.com/mozilla-firefox/firefox.git".insteadOf \
            "git@github.com:mozilla-firefox/firefox.git"

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
        with:
          disable_annotations: true

      - name: Expose actions cache variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env['ACTIONS_CACHE_URL'])
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env['ACTIONS_RUNTIME_TOKEN'])

      - name: Install system dependencies
        run: |
          brew update
          brew install cairo gnu-tar mercurial

          brew uninstall --ignore-dependencies python3.12 -f

          export PATH="$(python3 -m site --user-base)/bin":$PATH

          rm '/usr/local/bin/2to3-3.11' '/usr/local/bin/2to3-3.12' '/usr/local/bin/2to3' || true
          rm '/usr/local/bin/idle3.11' '/usr/local/bin/idle3.12' '/usr/local/bin/idle3' || true
          rm '/usr/local/bin/pydoc3.11' '/usr/local/bin/pydoc3.12' '/usr/local/bin/pydoc3' || true
          rm '/usr/local/bin/python3.11' '/usr/local/bin/python3.12' '/usr/local/bin/python3' || true
          rm '/usr/local/bin/python3.11-config' '/usr/local/bin/python3.12-config' '/usr/local/bin/python3-config' || true

          brew install watchman

          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.82
          source $HOME/.cargo/env

          if test "${{ matrix.arch }}" = "aarch64"; then
            rustup target add aarch64-apple-darwin
          else
            rustup target add x86_64-apple-darwin
            brew install nasm
          fi

      - name: Bootstrap repo
        run: |
          pnpm bootstrap

          cd engine
          export PATH="$(python3 -m site --user-base)/bin":$PATH
          ./mach --no-interactive bootstrap --application-choice browser --no-system-changes || true
          cd ..

      - name: Build
        run: |
          pnpm build

      - name: Package
        run: |
          pnpm package

      - name: Rename artifacts
        run: |
          mv dist/glide-*.dmg "dist/glide.macos-${{ matrix.arch }}.dmg"
          mv dist/output.mar "dist/macos-${{ matrix.arch }}.mar"

      - name: Upload DMG to release
        if: inputs.tag
        run: |
          gh release upload $TAG ./dist/glide.macos-${{ matrix.arch }}.dmg --clobber
        env:
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          TAG: ${{ inputs.tag }}

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: glide.macos-${{ matrix.arch }}.dmg
          path: ./dist/glide.macos-${{ matrix.arch }}.dmg

      - name: Upload MAR
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: macos-${{ matrix.arch }}.mar
          path: ./dist/macos-${{ matrix.arch }}.mar

      - name: Upload browser upload manifests
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: macos-${{ matrix.arch }}-updates
          path: ./dist/update/
