name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "dry run"
        type: boolean
        default: true
      linux:
        description: "linux"
        type: boolean
        default: true
      macos:
        description: "macos"
        type: boolean
        default: true

jobs:
  metadata:
    name: metadata
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
      build_id: ${{ steps.get_build_id.outputs.build_id }}

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: Configure git
        run: |
          git config --global \
            url."https://github.com/mozilla-firefox/firefox.git".insteadOf \
            "git@github.com:mozilla-firefox/firefox.git"

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get version
        id: version
        run: |
          echo "version=$(pnpm --silent tsn scripts/version.mts)" >> $GITHUB_OUTPUT

      - id: get_build_id
        run: |
          build_date=`date +"%Y%m%d%I%M%S"`
          echo "build_id=${build_date}" >> $GITHUB_OUTPUT

      - name: Create draft release
        if: ${{ !inputs.dry_run }}
        run: |
          if gh release view $VERSION > /dev/null 2>&1; then
            gh release edit $VERSION --draft --title "$VERSION" --target "$RELEASE_SHA"
          else
            gh release create $VERSION --draft --title "$VERSION" --target "$RELEASE_SHA"
          fi
        env:
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
          RELEASE_SHA: ${{ github.sha }}

  linux:
    if: ${{ inputs.linux }}

    name: Linux build
    uses: ./.github/workflows/linux-build.yml
    needs: [metadata]
    with:
      upload: true
      MOZ_BUILD_DATE: ${{ needs.metadata.outputs.build_id }}

  macos:
    if: ${{ inputs.macos }}

    name: macOS build
    uses: ./.github/workflows/macos-build.yml
    needs: [metadata]
    with:
      artifacts: true
      MOZ_BUILD_DATE: ${{ needs.metadata.outputs.build_id }}

  macos-sign:
    if: ${{ !inputs.dry_run && inputs.macos }}

    name: macOS sign
    needs: [macos]
    uses: ./.github/workflows/macos-sign.yml

    secrets:
      MACOS_P12_BASE64: ${{ secrets.MACOS_P12_BASE64 }}
      MACOS_P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
      APPLE_ACCOUNT_ID: ${{ secrets.APPLE_ACCOUNT_ID }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_APP_ID_PASSWORD: ${{ secrets.APPLE_APP_ID_PASSWORD }}
      PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
    with:
      artifacts: true

  source:
    name: source
    runs-on: ubuntu-latest
    needs: [metadata]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: Configure git
        run: |
          git config --global \
            url."https://github.com/mozilla-firefox/firefox.git".insteadOf \
            "git@github.com:mozilla-firefox/firefox.git"

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "24"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Bootstrap repo
        run: |
          pnpm bootstrap

      - name: Compress
        working-directory: engine
        run: |
          tar --use-compress-program=zstd -hcf ../glide.source.tar.zst *

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          retention-days: 10
          name: glide.source.tar.zst
          path: ./glide.source.tar.zst

  release:
    if: ${{ !inputs.dry_run }}

    name: Release
    runs-on: ubuntu-latest
    needs: [metadata, linux, macos, macos-sign, source]
    environment: release

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: Download Linux build (aarch64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: glide.linux-aarch64.tar.xz

      - name: Download Linux build (x86_64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: glide.linux-x86_64.tar.xz

      - name: Download signed macOS DMG (aarch64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: glide.macos-aarch64.signed.dmg

      - name: Download signed macOS DMG (x86_64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: glide.macos-x86_64.signed.dmg

      - name: Download macOS MAR (aarch64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: macos-aarch64.mar

      - name: Download macOS MAR (x86_64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: macos-x86_64.mar

      - name: Download source tarball
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: glide.source.tar.zst

      - name: Upload artifacts to the release
        run: |
          gh release upload $VERSION ./glide.linux-aarch64.tar.xz --clobber
          gh release upload $VERSION ./glide.linux-x86_64.tar.xz --clobber
          gh release upload $VERSION ./glide.macos-aarch64.dmg --clobber
          gh release upload $VERSION ./glide.macos-x86_64.dmg --clobber
          gh release upload $VERSION ./glide.source.tar.zst --clobber

          # MAR files
          gh release upload $VERSION ./macos-aarch64.mar --clobber
          gh release upload $VERSION ./macos-x86_64.mar --clobber
        env:
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          VERSION: ${{ needs.metadata.outputs.version }}

  push-update-manifests:
    if: ${{ !inputs.dry_run }}

    name: Push update manifests
    runs-on: ubuntu-latest
    needs: [release, metadata]

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: Checkout update-server repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          repository: glide-browser/update-server
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: update-server
          ref: main
          persist-credentials: true
          # zizmor: ignore[artipacked]
          # we push to the repo, so we do need to persist credentials

      - name: Download macOS updates (aarch64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: macos-aarch64-updates
          path: artifacts/macos-aarch64/

      - name: Download macOS updates (x86_64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: macos-x86_64-updates
          path: artifacts/macos-x86_64/

      - name: Debug
        run: |
          tree -Dh artifacts/

      - name: Copy update files to update-server
        run: |
          mkdir -p update-server/public/updates/
          cp -r artifacts/macos-aarch64/* update-server/public/versions/latest/
          cp -r artifacts/macos-x86_64/* update-server/public/versions/latest/

      - name: Debug
        run: |
          tree -Dh update-server/public/

      - name: Commit and push updates
        working-directory: update-server
        run: |
          git config user.name "glide-updater"
          git config user.email "updates@glide-browser.app"

          git add -A .

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add update files for version ${VERSION}"
            git push
          fi
        env:
          VERSION: "${{ needs.metadata.outputs.version }}"
